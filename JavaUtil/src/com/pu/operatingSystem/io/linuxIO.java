package com.pu.operatingSystem.io;

/**
 * Description:
 * Created By @Author my on @Date 2020/4/6 22:47
 */
public class linuxIO {
    /**
     * 1 阻塞IO模型
     *      *进程或者线程等待某个条件，条件不满足，则一致等待下去，条件满足就进行下一步
     * 2 非阻塞IO模型
     *      *应用进程和内核交互，请求后直接返回，然后通过轮询，不停的询问内核数据准备好没有
     *      准备好了就完成交互
     * 3 IO复用模型（非阻塞的） select函数
     *      *多个进程的IO可以可以注册到同一管道，统一和内核完成交互，当请求的数据准备好了，
     *      进程再把对应的数据拷贝到用户空间中
     *      * select 模型 两次拷贝 轮询机制 有最大连接数限制
     *      * poll  模型同上，但是用链表存储，没用限制
     *      * epoll 回调机制 select 活跃的连接（活跃的请求排序到前面）用户态和内核态共享
     * 4 信号驱动模型
     *      *应用程序预先向内核注册一个信号处理函数。应用程序在读取文件时通知内核，某个socket的某个事件发生，就发一个信号，
     *      信号对应的处理函数会进行后续处理
     * 5 异步IO模型
     *      *请求发送给内核后，完全由内核取操作文件拷贝。
     */
}
